https://marketplace.visualstudio.com/items?itemName=burkeholland.simple-react-snippets


kulka@LAPTOP-HAS54S28 MINGW64 /d
$ mkdir ReactLessons

kulka@LAPTOP-HAS54S28 MINGW64 /d
$ cd ReactLessons/

kulka@LAPTOP-HAS54S28 MINGW64 /d/ReactLessons
$ npx create-react-app react-tic-tac-toe
Need to install the following packages:
  create-react-app@5.0.1
Ok to proceed? (y) y
npm WARN deprecated tar@2.2.2: This version of tar is no longer supported, and will not receive security updates. Please upgrade asap.

Creating a new React app in D:\ReactLessons\react-tic-tac-toe.

Installing packages. This might take a couple of minutes.
Installing react, react-dom, and react-scripts with cra-template...


added 1413 packages in 59s

226 packages are looking for funding
  run `npm fund` for details

Initialized a git repository.

Installing template dependencies using npm...

added 74 packages, and changed 1 package in 6s

235 packages are looking for funding
  run `npm fund` for details
Removing template package using npm...


removed 1 package, and audited 1487 packages in 2s

235 packages are looking for funding
  run `npm fund` for details

6 high severity vulnerabilities

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.

Created git commit.

Success! Created react-tic-tac-toe at D:\ReactLessons\react-tic-tac-toe
Inside that directory, you can run several commands:

  npm start
    Starts the development server.

  npm run build
    Bundles the app into static files for production.

  npm test
    Starts the test runner.

  npm run eject
    Removes this tool and copies build dependencies, configuration files
    and scripts into the app directory. If you do this, you canâ€™t go back!

We suggest that you begin by typing:

  cd react-tic-tac-toe
  npm start

Happy hacking!

==============================================================================================================
state explained by devin

what state the application is in? Currently
so state is the particular view of a react component based on its data. That's a good way of describing it.
you can base a lot of things on state
and state can be changed at will.
And the biggest reason why people like react
is that every time state is updated
it re-renders that component that it's sorted
and that was the thing we talked about yesterday. with the component hierarchy and react only re-rendering the parts that it needs.
So that's when that happens. So anytime that changes is when the re-render happens. we can imagine we have a component that has our shopping cart.
At first our card is empty, our state would likely be in our empty array. Then we can add an item into our cart. We'd push an object like this one into our cart.
Now, our view of our shopping cart will change, based on the data or the state of the shopping cart. So you know how, on a website. let's use battle. The
cart up here again. So if we click on cart.
we see your Amazon card is empty.
But if we go back. and we just add something random to it.
What do I add to my card quickly.
yeah, if I come over here
and I add to cart. Then we check my cart. Now we have the thing at our cart. and that's based on state.
The state of our application would have this in the cart object, the cart array. Rather.
So.
we are going to build today an online store.
not a working one.
but just one to give us an example of how to us